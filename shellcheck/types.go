package shellcheck

import (
	"encoding/json"
)

type Response []AutoGenerated
type AutoGenerated struct {
	File      string `json:"file"`
	Line      int    `json:"line"`
	EndLine   int    `json:"endLine"`
	Column    int    `json:"column"`
	EndColumn int    `json:"endColumn"`
	Level     string `json:"level"`
	Code      int    `json:"code"`
	Message   string `json:"message"`
	Fix       Fix    `json:"fix,omitempty"`
}

type Fix struct {
	Replacements Replacements `json:"replacements"`
}

type Replacements []Replacement

type Replacement struct {
	Column         int    `json:"column"`
	EndColumn      int    `json:"endColumn"`
	EndLine        int    `json:"endLine"`
	InsertionPoint string `json:"insertionPoint"`
	Line           int    `json:"line"`
	Precedence     int    `json:"precedence"`
	Replacement    string `json:"replacement"`
}

func (ls *Replacements) UnmarshalJSON(data []byte) error {
	// first, do a normal unmarshal
	str := string(data)
	if str == `null` {
		return nil
	}
	pp := []Replacement{}
	if err := json.Unmarshal(data, &pp); err != nil {
		return err
	}

	*ls = pp

	// done
	return nil
}
